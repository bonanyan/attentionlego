$date
	Sat Jan 06 20:43:10 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module dma_tb $end
$var wire 32 ! cmIn_softmax [31:0] $end
$var wire 32 " q_input [31:0] $end
$var wire 1 # mem_wr_en $end
$var wire 8 $ mem_data_wr [7:0] $end
$var wire 32 % mem_addr [31:0] $end
$var wire 32 & k_input [31:0] $end
$var wire 2 ' k_address [1:0] $end
$var wire 1 ( done_weight_dma $end
$var wire 1 ) done_loadscore_dma $end
$var wire 1 * done_loadq_dma $end
$var wire 32 + data_in_cim [31:0] $end
$var wire 2 , addr_col_cim [1:0] $end
$var reg 1 - clk $end
$var reg 32 . data_out_cim [31:0] $end
$var reg 1 / en_loadk_dma $end
$var reg 1 0 en_loadq_dma $end
$var reg 1 1 en_loadscore_dma $end
$var reg 1 2 en_weight_dma $end
$var reg 1 3 input_done_ld_k $end
$var reg 8 4 mem_data_rd [7:0] $end
$var reg 1 5 rst $end
$var reg 32 6 score_qk_output [31:0] $end
$var reg 1 7 web_done_cim $end
$var reg 32 8 weight_address [31:0] $end
$scope module dut $end
$var wire 2 9 addr_col_cim [1:0] $end
$var wire 32 : cim_qkv_data_rd [31:0] $end
$var wire 1 - clk $end
$var wire 32 ; cmIn_softmax [31:0] $end
$var wire 32 < data_out_cim [31:0] $end
$var wire 1 = done_st_kv $end
$var wire 1 > en_input_qkv $end
$var wire 1 / en_loadk_dma $end
$var wire 1 0 en_loadq_dma $end
$var wire 1 1 en_loadscore_dma $end
$var wire 1 ? en_st_kv $end
$var wire 1 @ en_trans_qkv $end
$var wire 1 2 en_weight_dma $end
$var wire 1 3 input_done_ld_k $end
$var wire 2 A k_address [1:0] $end
$var wire 32 B k_input [31:0] $end
$var wire 32 C mem_addr [31:0] $end
$var wire 8 D mem_data_rd [7:0] $end
$var wire 8 E mem_data_wr [7:0] $end
$var wire 1 # mem_wr_en $end
$var wire 32 F q_input [31:0] $end
$var wire 1 5 rst $end
$var wire 32 G score_qk_output [31:0] $end
$var wire 32 H sequence_length [31:0] $end
$var wire 1 7 web_done_cim $end
$var wire 32 I weight_address [31:0] $end
$var wire 1 J web_cim $end
$var wire 1 ( done_weight_dma $end
$var wire 1 ) done_loadscore_dma $end
$var wire 1 * done_loadq_dma $end
$var wire 32 K data_in_cim [31:0] $end
$var parameter 32 L BUS_ADDR_WIDTH $end
$var parameter 32 M BUS_DATA_WIDTH $end
$var parameter 32 N CIM_ADDR_WIDTH $end
$var parameter 32 O CIM_DATA_WIDTH $end
$var parameter 32 P DMODEL $end
$var parameter 32 Q DONE $end
$var parameter 32 R D_K $end
$var parameter 32 S IDLE $end
$var parameter 32 T LD_K $end
$var parameter 32 U LD_Q $end
$var parameter 32 V LD_SCORE $end
$var parameter 32 W LD_WEIGHT $end
$var parameter 32 X MEM $end
$var parameter 64 Y MEM_DATA_NUM_LD $end
$var parameter 64 Z MEM_DATA_NUM_ST $end
$var parameter 32 [ SEQ_LENGTH_BIT $end
$var reg 2 \ addr_col_cim_reg [1:0] $end
$var reg 32 ] cmIn_softmax_reg [31:0] $end
$var reg 32 ^ cnt_mem_data_num [31:0] $end
$var reg 2 _ k_address_reg [1:0] $end
$var reg 32 ` k_input_reg [31:0] $end
$var reg 32 a mem_addr_reg [31:0] $end
$var reg 8 b mem_data_wr_reg [7:0] $end
$var reg 1 c mem_wr_en_reg $end
$var reg 32 d q_input_reg [31:0] $end
$var reg 3 e state [2:0] $end
$scope begin genblk1[0] $end
$var parameter 2 f i $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 g i $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 h i $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 i i $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b11 i
b10 h
b1 g
b0 f
b10 [
b100 Z
b100 Y
b1 X
b10 W
b101 V
b100 U
b11 T
b0 S
b100 R
b110 Q
b100 P
b1000 O
b10 N
b1000 M
b100000 L
$end
#0
$dumpvars
b0 e
bx d
xc
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx K
1J
bx I
bz H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
z@
z?
z>
z=
bx <
bz ;
bz :
bx 9
bx 8
x7
bx 6
05
bx 4
x3
x2
x1
x0
x/
bx .
1-
bx ,
bx +
0*
0)
0(
bx '
bx &
bx %
bx $
x#
bx "
bz !
$end
#5
0-
#10
1-
15
#15
0-
#20
b0 ,
b0 9
b0 \
b0 %
b0 C
b0 a
b0 $
b0 E
b0 b
0#
0c
b0 ^
b1 e
1-
b0 8
b0 I
12
#25
0-
#30
b1 ^
b10010xxxxxxxxxxxxxxxxxxxxxxxx +
b10010xxxxxxxxxxxxxxxxxxxxxxxx K
b100 %
b100 C
b100 a
1-
b10010 4
b10010 D
#35
0-
#40
b10 ^
b1001000110100xxxxxxxxxxxxxxxx +
b1001000110100xxxxxxxxxxxxxxxx K
b1000 %
b1000 C
b1000 a
1-
b110100 4
b110100 D
#45
0-
#50
b11 ^
b100100011010001010110xxxxxxxx +
b100100011010001010110xxxxxxxx K
b1100 %
b1100 C
b1100 a
1-
b1010110 4
b1010110 D
#55
0-
#60
b100 ^
b10010001101000101011001111000 +
b10010001101000101011001111000 K
b10000 %
b10000 C
b10000 a
1-
b1111000 4
b1111000 D
#65
0-
#70
0J
b0 ^
b10 e
1-
#75
0-
#80
1J
b1 ,
b1 9
b1 \
b1 e
1-
17
#85
0-
#90
b1 ^
b10011010001101000101011001111000 +
b10011010001101000101011001111000 K
b10100 %
b10100 C
b10100 a
1-
07
b10011010 4
b10011010 D
#95
0-
#100
b10 ^
b10011010101111000101011001111000 +
b10011010101111000101011001111000 K
b11000 %
b11000 C
b11000 a
1-
b10111100 4
b10111100 D
#105
0-
#110
b11 ^
b10011010101111001101111001111000 +
b10011010101111001101111001111000 K
b11100 %
b11100 C
b11100 a
1-
b11011110 4
b11011110 D
#115
0-
#120
b100 ^
b10011010101111001101111011110000 +
b10011010101111001101111011110000 K
b100000 %
b100000 C
b100000 a
1-
b11110000 4
b11110000 D
#125
0-
#130
0J
b0 ^
b10 e
1-
#135
0-
#140
1J
b10 ,
b10 9
b10 \
b1 e
1-
17
#145
0-
#150
b1 ^
b1111101111001101111011110000 +
b1111101111001101111011110000 K
b100100 %
b100100 C
b100100 a
1-
07
b1111 4
b1111 D
#155
0-
#160
b10 ^
b1111110111101101111011110000 +
b1111110111101101111011110000 K
b101000 %
b101000 C
b101000 a
1-
b11011110 4
b11011110 D
#165
0-
#170
b11 ^
b1111110111101100101111110000 +
b1111110111101100101111110000 K
b101100 %
b101100 C
b101100 a
1-
b11001011 4
b11001011 D
#175
0-
#180
b100 ^
b1111110111101100101110101001 +
b1111110111101100101110101001 K
b110000 %
b110000 C
b110000 a
1-
b10101001 4
b10101001 D
#185
0-
#190
0J
b0 ^
b10 e
1-
#195
0-
#200
1J
b11 ,
b11 9
b11 \
b1 e
1-
17
#205
0-
#210
b1 ^
b10000111110111101100101110101001 +
b10000111110111101100101110101001 K
b110100 %
b110100 C
b110100 a
1-
07
b10000111 4
b10000111 D
#215
0-
#220
b10 ^
b10000111011001011100101110101001 +
b10000111011001011100101110101001 K
b111000 %
b111000 C
b111000 a
1-
b1100101 4
b1100101 D
#225
0-
#230
b11 ^
b10000111011001010100001110101001 +
b10000111011001010100001110101001 K
b111100 %
b111100 C
b111100 a
1-
b1000011 4
b1000011 D
#235
0-
#240
b100 ^
b10000111011001010100001100100001 +
b10000111011001010100001100100001 K
b1000000 %
b1000000 C
b1000000 a
1-
b100001 4
b100001 D
#245
0-
#250
0J
b0 ^
b10 e
1-
#255
0-
#260
1J
1(
x*
x)
b110 e
1-
17
#265
0-
#270
0*
0)
b0 e
0(
1-
02
07
#275
0-
#280
b0 '
b0 A
b0 _
b10010001101000101011001111000 &
b10010001101000101011001111000 B
b10010001101000101011001111000 `
b11 e
1-
b10010001101000101011001111000 .
b10010001101000101011001111000 <
03
1/
#285
0-
#290
1-
#295
0-
#300
b10011010101111001101111011110000 &
b10011010101111001101111011110000 B
b10011010101111001101111011110000 `
b1 '
b1 A
b1 _
1-
b10011010101111001101111011110000 .
b10011010101111001101111011110000 <
13
#305
0-
#310
1-
03
#315
0-
#320
1-
#325
0-
#330
b1111110111101100101110101001 &
b1111110111101100101110101001 B
b1111110111101100101110101001 `
b10 '
b10 A
b10 _
1-
b1111110111101100101110101001 .
b1111110111101100101110101001 <
13
#335
0-
#340
1-
03
#345
0-
#350
1-
#355
0-
#360
b10000111011001010100001100100001 &
b10000111011001010100001100100001 B
b10000111011001010100001100100001 `
b11 '
b11 A
b11 _
1-
b10000111011001010100001100100001 .
b10000111011001010100001100100001 <
13
#365
0-
#370
1-
03
#375
0-
#380
1-
#385
0-
#390
x*
x)
b110 e
1-
0/
13
#395
0-
#400
0)
b0 e
0*
1-
b10010001101000101011001111000 .
b10010001101000101011001111000 <
10
#405
0-
#410
b10010001101000101011001111000 "
b10010001101000101011001111000 F
b10010001101000101011001111000 d
b100 e
1-
#415
0-
#420
1*
x)
b110 e
1-
#425
0-
#430
0)
b0 e
0*
1-
00
#435
0-
#440
b10010001101000101011001111000 ]
b101 e
1-
b10010001101000101011001111000 6
b10010001101000101011001111000 G
11
#445
0-
#450
1)
b110 e
1-
#455
0-
#460
0)
b0 e
1-
#465
0-
#470
1-
01
#475
0-
#480
1-
#485
0-
#490
1-
#495
0-
#500
1-
#505
0-
#510
1-
#515
0-
#520
1-
